jQuery Tag Handler v1.0.1
Copyright (C) 2010 Mark Jubenville
Mark Jubenville - ioncache@gmail.com
http://ioncache.github.com/Tag-Handler

Development time supported by:
Raybec Communications
http://www.raybec.com
http://www.mysaleslink.com

Based heavily on:
Tag it! by Levy Carneiro Jr (http://levycarneiro.com/)
http://levycarneiro.com/projects/tag-it/example.html
http://github.com/levycarneiro/tag-it
http://plugins.jquery.com/project/tag-it

Tag icons/cursors converted from:
From the famfamfam.com Silk icon set:
http://www.famfamfam.com/lab/icons/silk/

Loader image created at:
Preloaders.net
http://preloaders.net/

------------------------------------------------------------------------------
Description 
------------------------------------------------------------------------------

Tag Handler is a jquery plugin used for managing tag-type metadata.

Tag Handler must be attached to one or more <ul> tags in your HTML.

To add a tag, click on the tag box, type in a name, and hit enter or comma.

Tags may be removed from the tag box by hitting backspace or clicking on
the tag.

Tag Handler may receive a list of tags when initialized or by pulling data
via ajax from a supplied URL. It may also post back a list of tags to a
separately specified URL.

If tags are retrieved with the a URL, the server must supply a JSON
formatted string with an array titled 'availableTags' and optionally an
array titled 'assignedTags'. The 'availableTags' array will populate the
autocomplete list for the tag input field, and the list of 'assignedTags'
will be added as tags to the tag container.

If tags are updated via ajax, then an array of tags will be sent back to
the updateURL named 'tags'.  You may also specify any additional data to
be sent with the updateData option.

A sample CSS file is included that can be used to help with formatting tags.

------------------------------------------------------------------------------
Plugin Examples
------------------------------------------------------------------------------

Example 1: The Tag Handler will be initialized with no options and no default
           tags:

    $("#basic_tag_handler").tagHandler();

Example 2: The Tag Handler will be initialized with preset tags from the
           assignedTags and availableTags arrays, and autocomplete witll be
           turned on:

    $("#array_tag_handler").tagHandler({
        assignedTags: [ 'Perl' ],
        availableTags: [ 'C', 'C++', 'C#', 'Java', 'Perl', 'PHP', 'Python' ],
        autocomplete: true
    });

Example 3: The Tag Handler will be initialized and pull data via ajax, also
           sending some data to the server:

    $("#ajaxget_tag_handler").tagHandler({
        getData: { id: 'user123', type: 'user' },
        getURL: '/ajaxtest/get',
        autocomplete: true
    });

Example 4: Same as Example 3, but a different user is set in the getData /
           UpdateData options and now the tags will save when clicking the save
           button:
           
    $("#ajaxupdate_tag_handler").tagHandler({
        getData: { id: 'user234', type: 'user' },
        getURL: '/ajaxtest/get',
        updateData: { id: 'user234', type: 'user' },
        updateURL: '/ajaxtest/update',
        autocomplete: true
    });

Example 5: Same as Example 4, but autoUpdate is true, tags will save
           automatically (no save button will be shown):

    $("#ajaxautoupdate_tag_handler").tagHandler({
        getData: { id: 'user234', type: 'user' },
        getURL: '/ajaxtest/get',
        updateData: { id: 'user234', type: 'user' },
        updateURL: '/ajaxtest/update',
        autocomplete: true,
        autoUpdate: true
    });

------------------------------------------------------------------------------
Plugin Options
------------------------------------------------------------------------------

Tag data specific options:
--------------------------

Option          Description                                     Default Value
--------------  ----------------------------------------------  --------------
assignedTags    array to pass a list of already assigned tags   []
availableTags   array to pass a list of all available tags      []
getData         data field with info for getURL                 ''
getURL          URL for retrieving tag lists via ajax           ''
updatetData     data field with additional info for updtateURL  ''
updateURL       URL for saving tags via ajax                    ''

Miscellaneous options:
----------------------

Option          Description                                     Default Value
--------------  ----------------------------------------------  --------------
allowEdit       indicates whether the tag list is editable      true
autocomplete    requires jqueryui autocomplete plugin           false
autoUpdate      indicates whether updating occurs automatically false
                whenever a tag is added/deleted - if set true,
                the save button will not be shown
className       base class name that will be added to the tag   'tagHandler'
                container 
debug           will turn on some console logging debug info    false
delimiter       extra delimiter to use to separate tags         ''
                note 'enter' and 'comma' are always allowed 
sortTags        sets sorting of tag names alphabetically        true

------------------------------------------------------------------------------
License
------------------------------------------------------------------------------

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see < http://www.gnu.org/licenses/ >.